# # To build a container, you will use the docker build command
# # https://docs.docker.com/engine/reference/commandline/build/
# #
# #   docker build -t <IMAGE TAG> -f Dockerfile.serving .
# #   docker build -t <IMAGE TAG> -f Dockerfile.jupyter .
# #


# # https://docs.docker.com/engine/reference/builder/#from
# # You shouldn't need to change this
# FROM python:3.8-slim-buster

# # https://docs.docker.com/engine/reference/builder/#workdir
# # Create and cd into /code as your working directory
# WORKDIR /code


# # The main docker commands you will find useful:
# # 
# # Add a file or directory
# # https://docs.docker.com/engine/reference/builder/#add
# #
# #       ADD ./<SOURCE_DIR/FILE> ./<DOCKER_DIR/FILE>
# #
# # Run a shell command (tip: chain shell commands with && rather than multiple RUN commands)
# # https://docs.docker.com/engine/reference/builder/#run
# #
# #       RUN <SHELL COMMAND>   
# #
# # Set an environment variable:
# # https://docs.docker.com/engine/reference/builder/#env
# #
# #       ENV <ENV_VAR>=<DEFAULT>
# #
# # Expose a port
# # https://docs.docker.com/engine/reference/builder/#port
# #
# #       EXPOSE <PORT>
# #
# # Provide default command for executing container
# # https://docs.docker.com/engine/reference/builder/#cmd
# #
# #       CMD <SHELL COMMAND>



# # TODO: add code, optionally a default model if you want 


# # TODO: install libs


# # TODO: expose ports (or do this in docker-compose)


# # TODO: specify default command - this is not required because you can always specify the command
# # either with the docker run command or in the docker-compose file

# # COPY requirements.txt requirements.txt
# # RUN pip3 install -r requirements.txt

# # COPY ift6758 ift6758
# # RUN pip install -e ift6758/

# # COPY serving/app.py app.py

# # ENV COMET_API_KEY=${COMET_API_KEY}


# # EXPOSE 8080
# # CMD ["gunicorn"  , "--bind", "0.0.0.0:8080", "app:app"]
# # # ENTRYPOINT [ "python" ]
# # # CMD ["serving/app.py"]

# COPY requirements.txt requirements.txt
# RUN pip3 install -r requirements.txt

# COPY ift6758 ift6758
# RUN pip install -e ift6758/

# COPY serving/app.py app.py

# ARG COMET_API_KEY
# ENV COMET_API_KEY=${COMET_API_KEY}

# EXPOSE 8080
# CMD ["gunicorn", "--bind", "0.0.0.0:8080", "app:app"]


FROM python:3.7

WORKDIR /app

COPY requirements.txt requirements.txt
RUN pip3 install -r requirements.txt

COPY .env .env

COPY serving/app.py app.py

ENV COMET_API_KEY=${COMET_API_KEY}

EXPOSE 8000
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "app:app"]